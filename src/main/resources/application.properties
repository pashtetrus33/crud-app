server.port = 8080
# H2 Database
spring.h2.console.enabled=true
#spring.datasource.url=jdbc:h2:mem:library
spring.datasource.url=jdbc:h2:file:./data/library
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.open-in-view=true

#OpenAPI descriptions at http://localhost:8082/api-docs
springdoc.api-docs.path=/api-docs

#API documentation will be available at http://localhost:8082/swagger-ui.html
springdoc.swagger-ui.path=/swagger-ui.html
#sort the API paths according to their HTTP methods
springdoc.swagger-ui.operationsSorter=method

#By default, data.sql scripts get executed before the Hibernate is initialized.
# We need Hibernate to create our tables before inserting the data into them.
# To achieve this, we need to defer the initialization of our data source
spring.jpa.defer-datasource-initialization=true

#Please note that for any script-based initialization,
#i.e. inserting data via data.sql or creating schema via schema.sql, we need to set the below property
#For embedded databases such as H2, this is set to always by default.
spring.sql.init.mode=always

#Please note that if we are using script-based initialization,
# i.e. through schema.sql and data.sql and also Hibernate initialization, then using both of them together can cause some issues.
#To solve this, we can disable the execution of DDL commands altogether by Hibernate, which Hibernate uses for the creation/updation of tables
spring.jpa.hibernate.ddl-auto=none